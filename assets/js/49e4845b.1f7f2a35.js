"use strict";(self.webpackChunkselflow=self.webpackChunkselflow||[]).push([[75],{5329:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>u,frontMatter:()=>s,metadata:()=>p,toc:()=>m});var a=n(3117),o=n(102),i=(n(7294),n(3905)),r=["components"],s={title:"Steps"},l=void 0,p={unversionedId:"steps/index",id:"steps/index",title:"Steps",description:"For clarity, the steps configuration are showed in a yaml format but you can also use the same keys in a json file and",source:"@site/../../docs/steps/index.md",sourceDirName:"steps",slug:"/steps/",permalink:"/selflow/docs/steps/",draft:!1,editUrl:"https://github.com/selflow/selflow/edit/main/apps/selflow-documentation/../../docs/steps/index.md",tags:[],version:"current",frontMatter:{title:"Steps"},sidebar:"tutorialSidebar",previous:{title:"Getting Started",permalink:"/selflow/docs/getting-started"},next:{title:"\ud83d\udc0b Docker Steps",permalink:"/selflow/docs/steps/docker"}},d={},m=[{value:"Write a step",id:"write-a-step",level:2},{value:"Optional configuration",id:"optional-configuration",level:2},{value:"<code>needs</code>",id:"needs",level:3},{value:"Syntax",id:"syntax",level:4},{value:"Example",id:"example",level:4},{value:"<code>if</code>",id:"if",level:3},{value:"Syntax :",id:"syntax-",level:4},{value:"Example",id:"example-1",level:4}],c={toc:m};function u(e){var t=e.components,n=(0,o.Z)(e,r);return(0,i.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"For clarity, the steps configuration are showed in a yaml format but you can also use the same keys in a json file and\nit will still run fine !")),(0,i.kt)("h2",{id:"write-a-step"},"Write a step"),(0,i.kt)("p",null,"Steps are written in a workflow file"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"workflow:\n  timeout: 5m\n  steps:\n    my-step:\n      kind: docker\n      with:\n        image: 'alpine:3.10.0'\n        commands: |\n          echo \"Selflow is love, Selflow is Life !\"\n")),(0,i.kt)("p",null,"In the above example, we are creating a step called ",(0,i.kt)("inlineCode",{parentName:"p"},"my-step"),".\nThis step has a ",(0,i.kt)("inlineCode",{parentName:"p"},"kind"),", this is a ",(0,i.kt)("strong",{parentName:"p"},"mandatory field")," that says the kind of step to use, here ",(0,i.kt)("em",{parentName:"p"},'"docker"'),".\nIt also has an object passed with the ",(0,i.kt)("inlineCode",{parentName:"p"},"with")," key with a few properties that the docker step needs.\nThis is also a ",(0,i.kt)("strong",{parentName:"p"},"mandatory field"),"."),(0,i.kt)("h2",{id:"optional-configuration"},"Optional configuration"),(0,i.kt)("h3",{id:"needs"},(0,i.kt)("inlineCode",{parentName:"h3"},"needs")),(0,i.kt)("h4",{id:"syntax"},"Syntax"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"workflow:\n  timeout: 5m\n  steps:\n    # ...\n    # Other steps definitions\n    # ...\n    my-step:\n      kind: docker\n      needs:\n        - some-step\n        - some-other-step\n      with:\n        image: 'alpine:3.10.0'\n        commands: |\n          echo \"Selflow is love, Selflow is Life !\"\n")),(0,i.kt)("p",null,"In this example, the step ",(0,i.kt)("inlineCode",{parentName:"p"},"my-step")," depends on steps ",(0,i.kt)("inlineCode",{parentName:"p"},"some-step")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"some-other-step")," so it will start only after both steps stops with a status of ",(0,i.kt)("em",{parentName:"p"},"SUCCESS"),"."),(0,i.kt)("p",null,"The nice thing about step dependencies, is that ",(0,i.kt)("strong",{parentName:"p"},"they can share variables"),"."),(0,i.kt)("h4",{id:"example"},"Example"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'workflow:\n  timeout: 5m\n  steps:\n    step-a:\n      kind: docker\n      with:\n        image: \'alpine:3.10.0\'\n        commands: |\n          echo "::output::foo::bar"\n\n    step-b:\n      kind: docker\n      needs:\n        - step-a\n      with:\n        image: \'alpine:3.10.0\'\n        commands: |\n          echo "{{ .Needs "step-a" "foo" }}"\n')),(0,i.kt)("p",null,"A lot of things are happening there. First we have two steps, ",(0,i.kt)("inlineCode",{parentName:"p"},"step-a")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"step-b"),", both docker steps."),(0,i.kt)("p",null,"The step ",(0,i.kt)("inlineCode",{parentName:"p"},"step-a"),' logs "',(0,i.kt)("em",{parentName:"p"},"::output::foo::bar"),'".\nThis syntax is used to tell the docker steps that it needs to output a variable called "foo" with the value of "bar".'),(0,i.kt)("p",null,"The in ",(0,i.kt)("inlineCode",{parentName:"p"},"step-b"),", with are using this syntax ",(0,i.kt)("inlineCode",{parentName:"p"},'{{ .Needs "step-a" "foo" }}'),".\nHere we are using ",(0,i.kt)("a",{parentName:"p",href:"https://pkg.go.dev/text/template"},"Go Template"),' to declare that the step needs the value of the variable "foo" output by ',(0,i.kt)("inlineCode",{parentName:"p"},"step-a"),"."),(0,i.kt)("p",null,"So in this example, ",(0,i.kt)("inlineCode",{parentName:"p"},"step-b"),' will output "bar".'),(0,i.kt)("p",null,"You can find more details about how to use ",(0,i.kt)("a",{parentName:"p",href:"https://pkg.go.dev/text/template"},"Go Template")," on its great documentation !"),(0,i.kt)("h3",{id:"if"},(0,i.kt)("inlineCode",{parentName:"h3"},"if")),(0,i.kt)("h4",{id:"syntax-"},"Syntax :"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"workflow:\n  timeout: 5m\n  steps:\n    my-step:\n      kind: docker\n      if: 'false'\n      with:\n        image: 'alpine:3.10.0'\n        commands: |\n          echo \"This will not be executed\"\n")),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"if"),' command allows to execute a step only if the specified condition is truthy.\nThe condition is considered truthy if it is contains an empty string, "no" or "false".'),(0,i.kt)("p",null,"It doesn't do much in the example above but you can combine it with step variables as explained in the ",(0,i.kt)("a",{parentName:"p",href:"#needs"},(0,i.kt)("inlineCode",{parentName:"a"},"Needs"))," attribute to make it dynamic !"),(0,i.kt)("h4",{id:"example-1"},"Example"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'workflow:\n  timeout: 5m\n  steps:\n    step-a:\n      kind: docker\n      with:\n        image: "alpine:3.10.0"\n        commands: |\n          # a will be equal to either "true" of "false" at random\n          a=$(if [ "$(($RANDOM % 2))" -eq "0" ]; then echo "true"; else echo "false"; fi)\n          echo "::output::foo::$a"\n\n    step-b:\n      kind: docker\n      needs:\n        - step-a\n      if: "{{ .Needs "step-a" "foo" }}"\n      with:\n        image: "alpine:3.10.0"\n        commands: |\n          echo "I might be executed"\n')),(0,i.kt)("p",null,"It this example, ",(0,i.kt)("inlineCode",{parentName:"p"},"step-b")," depends on ",(0,i.kt)("inlineCode",{parentName:"p"},"step-a"),".\n",(0,i.kt)("inlineCode",{parentName:"p"},"step-a"),' will output a "foo" variable that will randomly equals "true" or "false".\nThe output is used in the ',(0,i.kt)("inlineCode",{parentName:"p"},"if")," attribute of the second step to only execute it if ",(0,i.kt)("inlineCode",{parentName:"p"},"step-a"),' returned "true".'))}u.isMDXComponent=!0},3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>f});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),m=p(n),u=o,f=m["".concat(l,".").concat(u)]||m[u]||c[u]||i;return n?a.createElement(f,r(r({ref:t},d),{},{components:n})):a.createElement(f,r({ref:t},d))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,r=new Array(i);r[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[m]="string"==typeof e?e:o,r[1]=s;for(var p=2;p<i;p++)r[p]=n[p];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);